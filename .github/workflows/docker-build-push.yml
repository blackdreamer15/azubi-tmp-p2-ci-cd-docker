name: Frontend CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    paths:
      - "front-end/**"
      - ".github/workflows/**"
  pull_request:
    branches: [main]
    paths:
      - "front-end/**"
      - ".github/workflows/**"
  workflow_dispatch: # Allow manual trigger

env:
  DOCKER_HUB_USERNAME: blackdreamer
  FRONTEND_IMAGE_NAME: azubi-tmp-p2-ci-cd-docker-frontend

jobs:
  # Job 1: Build and Push Frontend Only
  build-frontend:
    name: Build & Push Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./front-end
          file: ./front-end/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            SECRET_COOKIE_PASSWORD=${{ secrets.SECRET_COOKIE_PASSWORD }}

  # Job 2: Discord Success Notification
  notify-discord-success:
    name: Discord Success Notification
    runs-on: ubuntu-latest
    needs: [build-frontend]
    if: success()

    steps:
      - name: Discord Success Notification
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: success
          title: "üéâ Frontend Build Successful!"
          description: |
            **Frontend Docker image built and pushed successfully!**
            ‚úÖ **Image**: `${{ env.DOCKER_HUB_USERNAME }}/${{ env.FRONTEND_IMAGE_NAME }}:latest`
            üöÄ **Ready for deployment!**

            **Build Details:**
            ‚Ä¢ Branch: `${{ github.ref_name }}`
            ‚Ä¢ Commit: `${{ github.sha }}`
            ‚Ä¢ Workflow: ${{ github.workflow }}
          color: 0x00ff00
          username: "GitHub Actions"
          avatar_url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"

  # Job 3: Discord Failure Notification
  notify-discord-failure:
    name: Discord Failure Notification
    runs-on: ubuntu-latest
    needs: [build-frontend]
    if: failure()

    steps:
      - name: Discord Failure Notification
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: failure
          title: "‚ùå Frontend Build Failed!"
          description: |
            **Frontend Docker build pipeline failed!**

            **Common issues:**
            ‚Ä¢ Docker Hub credentials
            ‚Ä¢ Dockerfile syntax errors  
            ‚Ä¢ Build context problems

            **Build Details:**
            ‚Ä¢ Branch: `${{ github.ref_name }}`
            ‚Ä¢ Commit: `${{ github.sha }}`
            ‚Ä¢ Workflow: ${{ github.workflow }}

            Please check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.
          color: 0xff0000
          username: "GitHub Actions"
          avatar_url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
