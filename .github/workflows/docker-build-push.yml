name: Frontend CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    paths:
      - "front-end/**"
      - ".github/workflows/**"
  pull_request:
    branches: [main]
    paths:
      - "front-end/**"
      - ".github/workflows/**"
  workflow_dispatch: # Allow manual trigger

env:
  DOCKER_HUB_USERNAME: blackdreamer
  FRONTEND_IMAGE_NAME: azubi-tmp-p2-ci-cd-docker-frontend

jobs:
  # Job 1: Build and Push Frontend Only
  build-frontend:
    name: Build & Push Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./front-end
          file: ./front-end/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            SECRET_COOKIE_PASSWORD=${{ secrets.SECRET_COOKIE_PASSWORD }}

  # Job 2: Notify Success
  notify-success:
    name: Frontend Build Success
    runs-on: ubuntu-latest
    needs: [build-frontend]
    if: success()

    steps:
      - name: Build Success Notification
        run: |
          echo "üéâ Frontend Docker image built and pushed successfully!"
          echo "‚úÖ Frontend: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.FRONTEND_IMAGE_NAME }}"
          echo "üöÄ Ready for deployment!"

  # Job 3: Notify Failure
  notify-failure:
    name: Frontend Build Failure
    runs-on: ubuntu-latest
    needs: [build-frontend]
    if: failure()

    steps:
      - name: Build Failure Notification
        run: |
          echo "‚ùå Frontend Docker build pipeline failed!"
          echo "Please check the logs for more details."
          echo "Common issues:"
          echo "- Docker Hub credentials"
          echo "- Dockerfile syntax errors"
          echo "- Build context problems"
          exit 1
